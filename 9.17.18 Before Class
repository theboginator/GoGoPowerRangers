package main

import (
	"bufio"
	"fmt"
	"os"
)

func main() {
	//Reading User Input
	var docName string //this variable will hold the name of the .txt file that you want to open
	fmt.Println("Enter the name of a file you would like to open.\nBe sure to include the .txt at the end of the name.\nExample: SomethingCool.txt")
	_, err:= fmt.Scan(&docName) //scans for the users input

	file, err := os.Open(docName)
	if err != nil {
		fmt.Println(err)
		return

	}
	defer file.Close()

	scanner := bufio.NewScanner(file)
	scanner.Split(bufio.ScanWords)

	// initial size of our wordlist
	bufferSize := 100
	words := make([]string, bufferSize)
	pos := 0

	for scanner.Scan() {
		if err := scanner.Err(); err != nil {
			// This error is a non-EOF error. End the iteration if we encounter
			// an error
			fmt.Println(err)
			break
		}

		words[pos] = scanner.Text()
		pos++

		if pos >= len(words) {
			// expand the buffer by 100 again
			newbuf := make([]string, bufferSize)
			words = append(words, newbuf...)
		}
	}
	defer 

	fmt.Println("\n\nWord list:")
	// we are iterating only until the value of "pos" because our buffer size
	// might be more than the number of words because we increase the length by
	// a constant value. Or the scanner loop might've terminated due to an
	// error prematurely. In this case the "pos" contains the index of the last
	// successful update.
	for _, word := range words[:pos] {
		fmt.Println(word)
	}

}
